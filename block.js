const Web3 = require('web3')
const rpcUrl = "http://localhost:8000"
// const Web3Personal = require('web3-shh')
// const shh = new Web3Personal(rpcUrl)
const web3 = new Web3(rpcUrl) 
//const web3 = new Web3(new Web3.providers.HttpProvider(rpcUrl));
var Accounts = require('web3-eth-accounts')
var keyth = require('keythereum')
const Tx = require('ethereumjs-tx').Transaction
const ContractGet = require('./app/models/contract')



//console.log(web3.eth.accounts)

// console.log(Web3.version)


var accountOrpaKey = "63486cf0332b231a768b8cb4e1683f352532a22e37f5c778e61f016f3a314038";

var abi = [
	{
		"constant": true,
		"inputs": [],
		"name": "seller",
		"outputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "_orderId",
				"type": "string"
			}
		],
		"name": "getStoreDrugs",
		"outputs": [
			{
				"name": "",
				"type": "string"
			},
			{
				"name": "",
				"type": "string"
			},
			{
				"name": "",
				"type": "string"
			},
			{
				"name": "",
				"type": "string"
			},
			{
				"name": "",
				"type": "string"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "depotId",
		"outputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "isSeller_",
		"outputs": [
			{
				"name": "",
				"type": "bool"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "_orderId",
				"type": "string"
			},
			{
				"name": "_depotId",
				"type": "string"
			},
			{
				"name": "_seller",
				"type": "string"
			},
			{
				"name": "_fromAdd",
				"type": "string"
			},
			{
				"name": "_toAdd",
				"type": "string"
			}
		],
		"name": "storeDrugs",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "isDepotId_",
		"outputs": [
			{
				"name": "",
				"type": "bool"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"payable": true,
		"stateMutability": "payable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"name": "orderId",
				"type": "string"
			},
			{
				"indexed": false,
				"name": "depotId",
				"type": "string"
			},
			{
				"indexed": false,
				"name": "seller",
				"type": "string"
			},
			{
				"indexed": false,
				"name": "fromAdd",
				"type": "string"
			},
			{
				"indexed": false,
				"name": "toAdd",
				"type": "string"
			},
			{
				"indexed": false,
				"name": "role",
				"type": "string"
			}
		],
		"name": "logDrugInfo",
		"type": "event"
	}
];

var bytecode = "0x" + "608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611496806100546000396000f3fe608060405260043610610072576000357c01000000000000000000000000000000000000000000000000000000009004806308551a531461007757806323d77734146100ce57806332c9ce0a146103bf5780637c74d4f3146104165780639755963e14610445578063aea9b07d14610769575b600080fd5b34801561008357600080fd5b5061008c610798565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100da57600080fd5b50610194600480360360208110156100f157600080fd5b810190808035906020019064010000000081111561010e57600080fd5b82018360208201111561012057600080fd5b8035906020019184600183028401116401000000008311171561014257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107be565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019080838360005b838110156101e45780820151818401526020810190506101c9565b50505050905090810190601f1680156102115780820380516001836020036101000a031916815260200191505b5086810385528a818151815260200191508051906020019080838360005b8381101561024a57808201518184015260208101905061022f565b50505050905090810190601f1680156102775780820380516001836020036101000a031916815260200191505b50868103845289818151815260200191508051906020019080838360005b838110156102b0578082015181840152602081019050610295565b50505050905090810190601f1680156102dd5780820380516001836020036101000a031916815260200191505b50868103835288818151815260200191508051906020019080838360005b838110156103165780820151818401526020810190506102fb565b50505050905090810190601f1680156103435780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b8381101561037c578082015181840152602081019050610361565b50505050905090810190601f1680156103a95780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b3480156103cb57600080fd5b506103d4610d0b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042257600080fd5b5061042b610d31565b604051808215151515815260200191505060405180910390f35b34801561045157600080fd5b50610767600480360360a081101561046857600080fd5b810190808035906020019064010000000081111561048557600080fd5b82018360208201111561049757600080fd5b803590602001918460018302840111640100000000831117156104b957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561051c57600080fd5b82018360208201111561052e57600080fd5b8035906020019184600183028401116401000000008311171561055057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156105b357600080fd5b8201836020820111156105c557600080fd5b803590602001918460018302840111640100000000831117156105e757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561064a57600080fd5b82018360208201111561065c57600080fd5b8035906020019184600183028401116401000000008311171561067e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106e157600080fd5b8201836020820111156106f357600080fd5b8035906020019184600183028401116401000000008311171561071557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610d89565b005b34801561077557600080fd5b5061077e61136d565b604051808215151515815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60608060608060606000866040518082805190602001908083835b6020831015156107fe57805182526020820191506020810190506020830392506107d9565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000016000876040518082805190602001908083835b60208310151561086c5780518252602082019150602081019050602083039250610847565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001016000886040518082805190602001908083835b6020831015156108da57805182526020820191506020810190506020830392506108b5565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002016000896040518082805190602001908083835b6020831015156109485780518252602082019150602081019050602083039250610923565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060030160008a6040518082805190602001908083835b6020831015156109b65780518252602082019150602081019050602083039250610991565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600401848054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a815780601f10610a5657610100808354040283529160200191610a81565b820191906000526020600020905b815481529060010190602001808311610a6457829003601f168201915b50505050509450838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b1d5780601f10610af257610100808354040283529160200191610b1d565b820191906000526020600020905b815481529060010190602001808311610b0057829003601f168201915b50505050509350828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bb95780601f10610b8e57610100808354040283529160200191610bb9565b820191906000526020600020905b815481529060010190602001808311610b9c57829003601f168201915b50505050509250818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c555780601f10610c2a57610100808354040283529160200191610c55565b820191906000526020600020905b815481529060010190602001808311610c3857829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cf15780601f10610cc657610100808354040283529160200191610cf1565b820191906000526020600020905b815481529060010190602001808311610cd457829003601f168201915b505050505090509450945094509450945091939590929450565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4d6573736167652066726f6d204d616e7566616374757265720000000000000081525060200191505060405180910390fd5b846000866040518082805190602001908083835b602083101515610e875780518252602082019150602081019050602083039250610e62565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000019080519060200190610ed09291906113c5565b50836000866040518082805190602001908083835b602083101515610f0a5780518252602082019150602081019050602083039250610ee5565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001019080519060200190610f539291906113c5565b50826000866040518082805190602001908083835b602083101515610f8d5780518252602082019150602081019050602083039250610f68565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002019080519060200190610fd69291906113c5565b50816000866040518082805190602001908083835b6020831015156110105780518252602082019150602081019050602083039250610feb565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060030190805190602001906110599291906113c5565b50806000866040518082805190602001908083835b602083101515611093578051825260208201915060208101905060208303925061106e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040190805190602001906110dc9291906113c5565b507fca01b822d94f4b3dfa45d841ecfe8823af53b351e054ec8aace6ce43ad80b7ef85858585856040518080602001806020018060200180602001806020018060200187810387528c818151815260200191508051906020019080838360005b8381101561115757808201518184015260208101905061113c565b50505050905090810190601f1680156111845780820380516001836020036101000a031916815260200191505b5087810386528b818151815260200191508051906020019080838360005b838110156111bd5780820151818401526020810190506111a2565b50505050905090810190601f1680156111ea5780820380516001836020036101000a031916815260200191505b5087810385528a818151815260200191508051906020019080838360005b83811015611223578082015181840152602081019050611208565b50505050905090810190601f1680156112505780820380516001836020036101000a031916815260200191505b50878103845289818151815260200191508051906020019080838360005b8381101561128957808201518184015260208101905061126e565b50505050905090810190601f1680156112b65780820380516001836020036101000a031916815260200191505b50878103835288818151815260200191508051906020019080838360005b838110156112ef5780820151818401526020810190506112d4565b50505050905090810190601f16801561131c5780820380516001836020036101000a031916815260200191505b508781038252600f8152602001807f4465706f7420496e2d63686172676500000000000000000000000000000000008152506020019b50505050505050505050505060405180910390a15050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061140657805160ff1916838001178555611434565b82800160010185558215611434579182015b82811115611433578251825591602001919060010190611418565b5b5090506114419190611445565b5090565b61146791905b8082111561146357600081600090555060010161144b565b5090565b9056fea165627a7a7230582027f85b7d5082170cfe74b95f14c2627bda8431f5ec875cd67748d7de45feb64a0029";
	
	
	

//  console.log("Success");
function deployContract(){

	web3.eth.getAccounts().then(async function (accounts){
		// if(err =>{
		// 	console.log(err)
		// })
		var drugContract = new web3.eth.Contract(abi);
		//console.log(drugContract)

		var deployData = await drugContract.deploy({
			data: bytecode
		}).encodeABI();

		const tx={
			chainId: 23112,
			data: deployData,
			gas:8000000
		}
		
		var BaseAccount = keyth.recover('new1',keyth.importFromFile(accounts[0], "./block/data/")).toString('hex')

		web3.eth.accounts.signTransaction(tx, "0x"+ accountOrpaKey).then(signed =>{
			web3.eth.sendSignedTransaction(signed.rawTransaction).on('receipt', async function(response){
				console.log(response)

				
				// const newContract = new ContractGet({
				// 	blockHash: response.blockHash,
				// 	blockNumber: response.blockNumber,
				// 	contractAddress: response.contractAddress,
				// 	cumulativeGasUsed: response.cumulativeGasUsed,
				// 	from: response.from,
				// 	gasUsed: response.gasUsed,
				// 	logsBloom: response.logsBloom,
				// 	status: response.status,
				// 	to: response.to,
				// 	transactionHash: response.transactionHash,
				// 	transactionIndex: response.transactionIndex,
				// 	type: response.type
				// })

				// const conSave = await newContract.save();
				// console.log(conSave)
			 
			})
			
		})
		//console.log(deployData)
	})



 }


module.exports = deployContract